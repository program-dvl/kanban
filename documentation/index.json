{
  "swagger": "2.0",
  "info": {
    "version": "",
    "title": "Kanban Platform",
    "description": ""
  },
  "host": "localhost/kanban/public",
  "basePath": "/api",
  "paths": {
    "/task": {
      "post": {
        "operationId": "POST_create_task",
        "summary": "Create task",
        "consumes": [
          "application/json"
        ],
        "tags":[
          "Task"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Invalid Data"
          }
        }
      },
      "get": {
        "operationId": "GET_task_listing",
        "summary": "Listing tasks",
        "tags":[
          "Task"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/task/{taskId}": {
      "patch": {
        "operationId": "PATCH Task update",
        "summary": "Update Task",
        "consumes": [
          "application/json"
        ],
        "tags":[
          "Task"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Task not found"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "operationId": "Get task detail",
        "summary": "Get task details",
        "consumes": [
          "application/json"
        ],
        "tags":[
          "Task"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "delete": {
        "operationId": "Delete task",
        "summary": "Delete task",
        "tags":[
          "Task"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/state": {
      "post": {
        "operationId": "POST_create_state",
        "summary": "Create state",
        "consumes": [
          "application/json"
        ],
        "tags":[
          "State"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/State"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Invalid Data"
          }
        }
      }
    },
    "/state/{stateId}": {
      "patch": {
        "operationId": "PATCH State update",
        "summary": "Update Satte",
        "consumes": [
          "application/json"
        ],
        "tags":[
          "State"
        ],
        "parameters": [
          {
            "name": "stateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/State"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "State not found"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "operationId": "Delete state",
        "summary": "Delete state",
        "consumes": [
          "application/json"
        ],
        "tags":[
          "State"
        ],
        "parameters": [
          {
            "name": "stateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/board": {
      "get": {
        "operationId": "GET Board listing",
        "summary": "Listing tasks state wise",
        "tags":[
          "Board"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "Bad request"
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "deadline": {
          "type": "string"
        },
        "priority": {
          "type": "string",
          "enum": ["High", "Medium", "Low"]
        },
        "state_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "State": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "order_id": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}